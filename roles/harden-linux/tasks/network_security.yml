---
# tasks file for network security

- name: Ensure UFW is installed
  apt:
    name: ufw
#<<<<<< HEAD
    state: present
    update_cache: yes

- name: Allow SSH connections before enabling UFW
  ufw:
    rule: "{{ item.rule }}"
    port: "{{ item.port | default(omit) }}"
    proto: "{{ item.proto | default(omit) }}"
    state: enabled
  loop: "{{ firewall_rules }}"
  when: item.port == '22'
    #    state: enabled
    #    update_cache: yes
#>>>>>> backup-branch

- name: Enable UFW
  ufw:
    state: enabled

#<<<<<<< HEAD
- name: Configure allowed firewall rules
  ufw:
    rule: "{{ item.rule }}"
    port: "{{ item.port | default(omit) }}"
    proto: "{{ item.proto | default('tcp') }}"
    state: enabled
  loop: "{{ firewall_rules }}"
  when: item.rule == 'allow' and item.port != '22'

- name: Deny all other incoming traffic (TCP)
  ufw:
    rule: "{{ item.rule }}"
    port: "{{ item.port | default(omit) }}"
    proto: "{{ item.proto | default('tcp') }}"
    state: enabled
  loop: "{{ firewall_rules }}"
  when: item.rule == 'deny' and item.proto == 'tcp'

- name: Deny all other incoming traffic (UDP)
  ufw:
    rule: "{{ item.rule }}"
    port: "{{ item.port | default(omit) }}"
    proto: "{{ item.proto | default('udp') }}"
    state: enabled
  loop: "{{ firewall_rules }}"
  when: item.rule == 'deny' and item.proto == 'udp'

# Secure SSH settings
- name: Secure SSH settings
  lineinfile:
    path: "{{ ssh_config_path }}"
#=======
- name: Configure firewall rules
  ufw:
    rule: "{{ item.rule }}"
    port: "{{ item.port | default(omit) }}"
    proto: "{{ item.proto | default(omit) }}"
    state: present
  loop: "{{ firewall_rules }}"

- name: Secure SSH settings
  lineinfile:
    path: "{{ sshd_config_path }}"
#>>>>>>> backup-branch
    regexp: '^PasswordAuthentication'
    line: 'PasswordAuthentication no'
  notify:
    - Restart SSH

